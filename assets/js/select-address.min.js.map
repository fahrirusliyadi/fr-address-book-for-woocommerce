{"version":3,"sources":["select-address.js"],"names":["$","SelectAddress","this","$window","window","$document","document","prototype","init","_initFieldValues","on","proxy","onChangeBillingSelect","onChangeShippingSelect","find","onClickEditAddress","onCheckoutError","event","$selectedField","target","_initFieldsVisibility","_updateFieldValues","type","closest","length","preventDefault","_toggleFields","forEach","$fieldsWrapper","removeClass","$selectedBillingField","$selectedShippingField","addressId","val","$newButton","toggleClass","first","focus","hasClass","addClass","$form","address","fabfw_select_address","addresses","each","key","value","$field","is","append","trigger","jQuery"],"mappings":"CAQA,SAAUA,GACN,aAQA,SAASC,IACLC,KAAKC,QAAaH,EAAEI,QACpBF,KAAKG,UAAaL,EAAEM,UASxBL,EAAcM,UAAUC,KAAO,WAC3BN,KAAKO,mBAELP,KAAKG,UAAUK,GAAG,eAAgB,oEAAqEV,EAAEW,MAAMT,KAAKU,sBAAuBV,OAC3IA,KAAKG,UAAUK,GAAG,eAAgB,qEAAsEV,EAAEW,MAAMT,KAAKW,uBAAwBX,OAG7IA,KAAKG,UAAUS,KAAK,+CAA+CJ,GAAG,cAAeV,EAAEW,MAAMT,KAAKa,mBAAoBb,OACtHA,KAAKG,UAAUK,GAAG,iBAAkBV,EAAEW,MAAMT,KAAKc,gBAAiBd,QAUtED,EAAcM,UAAUK,sBAAwB,SAASK,GACrD,IAAIC,EAAiBlB,EAAEiB,EAAME,QAE7BjB,KAAKkB,sBAAsB,UAAWF,GACtChB,KAAKmB,mBAAmB,UAAWH,IAUvCjB,EAAcM,UAAUM,uBAAyB,SAASI,GACtD,IAAIC,EAAiBlB,EAAEiB,EAAME,QAE7BjB,KAAKkB,sBAAsB,WAAYF,GACvChB,KAAKmB,mBAAmB,WAAYH,IAUxCjB,EAAcM,UAAUQ,mBAAqB,SAASE,GAClD,IAAIK,EAAOtB,EAAEiB,EAAME,QAAQI,QAAQ,mCAAmCC,OAAS,UAAY,WAE3FP,EAAMQ,iBACNvB,KAAKwB,cAAcJ,IASvBrB,EAAcM,UAAUS,gBAAkB,SAASC,GAC/C,CAAC,UAAW,YAAYU,QAAQ,SAASL,GACrC,IAAIM,EAAkB5B,EAAE,gBAAkBsB,EAAO,0BAG7CM,EAAed,KAAK,wBAAwBU,QAC5CI,EAAeC,YAAY,aAQvC5B,EAAcM,UAAUE,iBAAmB,WACvC,IAAIqB,EAA0B9B,EAAE,6CAC5B+B,EAA0B/B,EAAE,8CAEhCE,KAAKkB,sBAAsB,UAAWU,GACtC5B,KAAKkB,sBAAsB,WAAYW,GACvC7B,KAAKmB,mBAAmB,UAAWS,GACnC5B,KAAKmB,mBAAmB,WAAYU,IAUxC9B,EAAcM,UAAUa,sBAAwB,SAASE,EAAMJ,GAG3D,GAAKA,EAAeM,OAApB,CAIA,IAAII,EAAkB5B,EAAE,gBAAkBsB,EAAO,0BAC7CU,EAAcd,EAAee,MAC7BC,EAAchB,EAAeK,QAAQ,mCAAmCT,KAAK,uBAAyBQ,EAAO,qBAEjHM,EAAeO,YAAY,SAAwB,QAAdH,GACrCE,EAAWC,YAAY,WAA0B,QAAdH,GACnCJ,EAAed,KAAK,kBAAkBsB,QAAQC,UAQlDpC,EAAcM,UAAUmB,cAAgB,SAASJ,GAC7C,IAAIM,EAAkB5B,EAAE,gBAAkBsB,EAAO,0BAE7CM,EAAeU,SAAS,WACxBV,EAAeC,YAAY,UAC3BD,EAAed,KAAK,kBAAkBsB,QAAQC,SAE9CT,EAAeW,SAAS,WAUhCtC,EAAcM,UAAUc,mBAAqB,SAASC,EAAMJ,GACxD,IAAIsB,EAAkBtB,EAAeK,QAAQ,QACzCkB,EAAkBC,qBAAqBC,UAAUzB,EAAee,OAE/DQ,GASLzC,EAAE4C,KAAKH,EAAS,SAASI,EAAKC,GAC1B,IAAIC,EAASP,EAAM1B,KAAK,IAAMQ,EAAO,IAAMuB,GAEtCE,EAAOvB,QAAUuB,EAAOd,QAAUa,IAKnCC,EAAOC,GAAG,YAAcD,EAAOjC,KAAK,iBAAmBgC,EAAQ,MAAMtB,QACrEuB,EAAOE,OAAO,kBAAoBH,EAAQ,KAAOA,EAAQ,aAG7DC,EAAOd,IAAIa,GAGXC,EAAOG,QAAQ,aAKnBV,EAAMU,QAAQ,WA5BYlD,EAAE,gBAAkBsB,EAAO,0BAGlCR,KAAK,UAAUmB,IAAI,MA4B1C,IAAIhC,GAAgBO,OAxLxB,CA0LG2C","file":"select-address.min.js","sourcesContent":["/* global fabfw_select_address */\n/**\n * Select address script on checkout page.\n * \n * @since 1.0.0\n * @param {jQuery} $\n * @returns {undefined}\n */\n(function($) {\n    \"use strict\";\n    \n    /**\n     * Select address class.\n     * \n     * @since 1.0.0\n     * @returns {SelectAddress}\n     */\n    function SelectAddress() {\n        this.$window    = $(window);\n        this.$document  = $(document);\n    }\n    \n    /**\n     * Initialize.\n     * \n     * @since 1.0.0\n     * @returns {undefined}\n     */\n    SelectAddress.prototype.init = function() {\n        this._initFieldValues();\n        \n        this.$document.on('change.fabfw', '.fabfw-select-address-container [name=\"fabfw_address_billing_id\"]', $.proxy(this.onChangeBillingSelect, this));\n        this.$document.on('change.fabfw', '.fabfw-select-address-container [name=\"fabfw_address_shipping_id\"]', $.proxy(this.onChangeShippingSelect, this));\n        // Cannot use descendants selector because WooCommerce@3.4.0 is stopping event propagation.\n        // https://github.com/woocommerce/woocommerce/blob/e8d8e25de1f0a43e9bd89f1c54625ede125a2b97/assets/js/frontend/woocommerce.js#L35-L37\n        this.$document.find('.fabfw-select-address-container .fabfw-edit').on('click.fabfw', $.proxy(this.onClickEditAddress, this));\n        this.$document.on('checkout_error', $.proxy(this.onCheckoutError, this))\n    };\n    \n    /**\n     * Change event handler for select billing address field.\n     * \n     * @since 1.0.0\n     * @param {Event} event\n     * @returns {undefined}\n     */\n    SelectAddress.prototype.onChangeBillingSelect = function(event) {\n        var $selectedField = $(event.target);\n        \n        this._initFieldsVisibility('billing', $selectedField);\n        this._updateFieldValues('billing', $selectedField);\n    };\n    \n    /**\n     * Change event handler for select shipping address field.\n     * \n     * @since 1.0.0\n     * @param {Event} event\n     * @returns {undefined}\n     */\n    SelectAddress.prototype.onChangeShippingSelect = function(event) {\n        var $selectedField = $(event.target);\n        \n        this._initFieldsVisibility('shipping', $selectedField);\n        this._updateFieldValues('shipping', $selectedField);\n    };\n    \n    /**\n     * Click event handler for edit address link.\n     * \n     * @since 1.0.0\n     * @param {Event} event\n     * @returns {undefined}\n     */\n    SelectAddress.prototype.onClickEditAddress = function(event) {\n        var type = $(event.target).closest('#fabfw_address_billing_id_field').length ? 'billing' : 'shipping';\n        \n        event.preventDefault();        \n        this._toggleFields(type);\n    };\n\n    /**\n     * Checkout event handler.\n     * \n     * @since 1.2.3\n     * @param {Event} event \n     */\n    SelectAddress.prototype.onCheckoutError = function(event) {\n        ['billing', 'shipping'].forEach(function(type) {\n            var $fieldsWrapper  = $('.woocommerce-' + type + '-fields__field-wrapper');\n            \n            // Show fields if has an error.\n            if ($fieldsWrapper.find('.woocommerce-invalid').length) {\n                $fieldsWrapper.removeClass('hidden');\n            }\n        })\n    }\n    \n    /**\n     * Initialize address field values on load.\n     */\n    SelectAddress.prototype._initFieldValues = function() {        \n        var $selectedBillingField   = $('[name=\"fabfw_address_billing_id\"]:checked');\n        var $selectedShippingField  = $('[name=\"fabfw_address_shipping_id\"]:checked');\n        \n        this._initFieldsVisibility('billing', $selectedBillingField);\n        this._initFieldsVisibility('shipping', $selectedShippingField);\n        this._updateFieldValues('billing', $selectedBillingField);\n        this._updateFieldValues('shipping', $selectedShippingField);\n    };\n    \n    /**\n     * Show the address fields if the customer wants to add a new address, otherwise\n     * hide it.\n     * \n     * @param {string} type Address type (billing|shipping).\n     * @param {jQuery} $selectedField\n     */\n    SelectAddress.prototype._initFieldsVisibility = function(type, $selectedField) {\n        // No saved address yet. The field is a input[type=hidden], so $selectedField \n        // will not contain any element.\n        if (!$selectedField.length) {\n            return;\n        }\n        \n        var $fieldsWrapper  = $('.woocommerce-' + type + '-fields__field-wrapper');\n        var addressId   = $selectedField.val();\n        var $newButton  = $selectedField.closest('.fabfw-select-address-container').find('[for=\"fabfw_address_' + type + '_id_new\"] .button');\n        \n        $fieldsWrapper.toggleClass('hidden', addressId !== 'new');\n        $newButton.toggleClass('disabled', addressId === 'new');\n        $fieldsWrapper.find(':input:visible').first().focus();\n    };\n    \n    /**\n     * Toggle the address fields.\n     * \n     * @param {string} type Address type (billing|shipping).\n     */\n    SelectAddress.prototype._toggleFields = function(type) {\n        var $fieldsWrapper  = $('.woocommerce-' + type + '-fields__field-wrapper');\n        \n        if ($fieldsWrapper.hasClass('hidden')) {\n            $fieldsWrapper.removeClass('hidden');\n            $fieldsWrapper.find(':input:visible').first().focus();\n        } else {\n            $fieldsWrapper.addClass('hidden')\n        }\n    };\n    \n    /**\n     * Update address field values.\n     * \n     * @param {string} type Address type (billing|shipping).\n     * @param {jQuery} $selectedField\n     */\n    SelectAddress.prototype._updateFieldValues = function(type, $selectedField) {\n        var $form           = $selectedField.closest('form');\n        var address         = fabfw_select_address.addresses[$selectedField.val()];\n        \n        if (!address) {\n            var $fieldsWrapper  = $('.woocommerce-' + type + '-fields__field-wrapper');\n\n            // Reset fields when adding a new address.\n            $fieldsWrapper.find(':input').val('')\n\n            return;\n        }\n        \n        $.each(address, function(key, value) {\n            var $field = $form.find('#' + type + '_' + key);\n            \n            if (!$field.length || $field.val() === value) {\n                return;\n            }\n            \n            // Create the select option if it does not exists yet.\n            if ($field.is('select') && !$field.find('option[value=\"' + value + '\"]').length) {\n                $field.append('<option value=\"' + value + '\">' + value + '</option>');\n            }\n            \n            $field.val(value);\n            // `onchange` only fires when the user types into the input and then the input loses focus.\n            // https://stackoverflow.com/a/3179392\n            $field.trigger('change');\n        });\n\n        // Trigger update checkout.\n        // https://github.com/woocommerce/woocommerce/blob/4.5.2/assets/js/frontend/checkout.js#L41\n        $form.trigger('update');\n    };\n\n    new SelectAddress().init();\n    \n})(jQuery);"]}